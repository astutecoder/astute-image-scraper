const puppet=require("puppeteer"),fs=require("fs"),request=require("request"),user_defined=require("./settings");(async()=>{try{let e=await user_defined.settings();const t=await puppet.launch({defaultViewport:{width:1920,height:1080}}),r=await t.newPage();await r.goto(e.url,{waitUntil:"networkidle2"}),user_defined.boxInfo("Scraping started. Please wait...",2,"=");let o=await r.evaluate(async()=>{await(()=>new Promise(e=>{let t=setInterval(function(){document.body.scrollHeight!==window.innerHeight+window.scrollY?window.scrollTo(0,document.body.scrollHeight):document.querySelector("#smb")?(document.querySelector("#smb").click(),document.querySelector("#smb").remove()):(clearInterval(t),e("done"))},1e3)}))();let e=Array.from(document.querySelectorAll('a[jsname="hSRGPd"]')),t=[];for(imageBox of e){let e=imageBox.getAttribute("href"),r=String(e.split("=")[1]).replace("&imgrefurl","");t.push(decodeURIComponent(r))}return t});await t.close(),user_defined.boxInfo("Total "+o.length+" images found",2,"!",";");let a=(t,r="",o=1)=>{let a=r?r+"_"+o+".jpg":o+".jpg";request.get(t).on("error",e=>user_defined.boxInfo(e.message,1,"x")).pipe(fs.createWriteStream(e.path+"/"+a)).on("close",()=>console.log("download complete:",a))},i=1;for(image of o){if(await a(image,e.prefix,e.start_from),i===e.download_limit)break;e.start_from++,i++}}catch(e){console.error(e.message)}})();