const puppet=require("puppeteer"),fs=require("fs"),request=require("request"),io=require("console-read-write"),user_defined=require("./settings");let showInputInfo=async e=>{user_defined.boxInfo("Your settings are as follows:",1,".",";"),io.write(""),io.write("{"),io.write(' "Image Folder": "'+e.path+'"'),io.write(' "Image File Prefix": "'+e.prefix+'"'),io.write(' "Image File Name Start From": '+e.start_from),io.write(' "Download Limit (quantity)": '+(e.download_limit?e.download_limit:'"No Limit"')),"1"===e.search_by?io.write(' "Search keyword": "'+e.keyword+'"'):io.write(' "Search URL": "'+e.url+'"'),io.write("}")},askConfirmation=async()=>{let e=(await io.ask("Is it ok? (Y/N)")).toLowerCase();for(;!e||!e.match(/^(n|no|y|yes)$/);)e=await io.ask("Is it ok? (Y/N)");return e};(async()=>{try{let e=await user_defined.settings();showInputInfo(e);let t=await askConfirmation();for(;t.toLowerCase().match(/^(n|no)$/)&&!t.toLowerCase().match(/^(y|yes)$/);)user_defined.boxInfo("Enter settings info one more time",1,"-"),e=await user_defined.settings(),showInputInfo(e),t=await askConfirmation();io.write("Processing....");const o=await puppet.launch({defaultViewport:{width:1920,height:1080}}),i=await o.newPage();await i.goto(e.url,{waitUntil:"networkidle2"}),user_defined.boxInfo("Scraping started. Please wait...",2,"=");let r=await i.evaluate(async()=>{await(()=>new Promise(e=>{let t=setInterval(function(){document.body.scrollHeight!==window.innerHeight+window.scrollY?window.scrollTo(0,document.body.scrollHeight):document.querySelector("#smb")?(document.querySelector("#smb").click(),document.querySelector("#smb").remove()):(clearInterval(t),e("done"))},1e3)}))();let e=Array.from(document.querySelectorAll('a[jsname="hSRGPd"]')),t=[];for(imageBox of e){let e=imageBox.getAttribute("href"),o=String(e.split("=")[1]).replace("&imgrefurl","");t.push(decodeURIComponent(o))}return t});await o.close();let a=e.download_limit?e.download_limit:"ALL";user_defined.boxInfo(`Total ${r.length} images found. Downloading ${a} of them.`,1,"!","ยก");let n=(t,o="",i=1)=>{let r=o?o+"_"+i+".jpg":i+".jpg";request.get(t).on("error",e=>user_defined.boxInfo(e.message,1,"x")).pipe(fs.createWriteStream(e.path+"/"+r)).on("close",()=>console.log("download complete:",r))},s=1;for(image of r){if(await n(image,e.prefix,e.start_from),s===e.download_limit)break;e.start_from++,s++}}catch(e){user_defined.boxInfo(e.message,"1","x")}})();